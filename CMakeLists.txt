######################################################
# @file     CMakeLists.txt
# @brief    The project file for CMake
# @author   dragon-archer <dragon-archer@outlook.com>
# @license  MIT License
#           Copyright (C) 2019 dragon-archer
######################################################

CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

PROJECT(libextcpp CXX)

SET(GNU_TARGET extcpp)
SET(MSVC_TARGET libextcpp)

IF(${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU")
	MESSAGE("Building with GCC...")
	SET(TARGET ${GNU_TARGET})
ELSEIF(${CMAKE_CXX_COMPILER_ID} STREQUAL "MSVC")
	MESSAGE("Building with MSVC...")
	SET(TARGET ${MSVC_TARGET})
ENDIF()

SET(BUILD_DIR build/)

INCLUDE_DIRECTORIES(./include)

AUX_SOURCE_DIRECTORY(./src SRC_DIR)

SET(SRC ${SRC_DIR})

ADD_LIBRARY(${TARGET} SHARED ${SRC})

IF(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	MESSAGE("Host OS is Windows")
	INSTALL(FILES README.md LICENSE DESTINATION ${CMAKE_PROJECT_NAME})
	INSTALL(TARGETS ${TARGET} RUNTIME DESTINATION ${CMAKE_PROJECT_NAME}/lib)
	INSTALL(DIRECTORY include/ DESTINATION ${CMAKE_PROJECT_NAME}/include FILES_MATCHING PATTERN "*.h")
	INSTALL(DIRECTORY include/ DESTINATION ${CMAKE_PROJECT_NAME}/include FILES_MATCHING PATTERN "*.hpp")
	INSTALL(DIRECTORY src/ DESTINATION ${CMAKE_PROJECT_NAME}/src FILES_MATCHING PATTERN "*.cpp")
ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	MESSAGE("Host OS is Linux")
	INSTALL(TARGETS ${TARGET} LIBRARY DESTINATION lib/${CMAKE_PROJECT_NAME})
	INSTALL(DIRECTORY include/ DESTINATION include/${CMAKE_PROJECT_NAME} FILES_MATCHING PATTERN "*.h")
	INSTALL(DIRECTORY include/ DESTINATION include/${CMAKE_PROJECT_NAME} FILES_MATCHING PATTERN "*.hpp")
ENDIF()
